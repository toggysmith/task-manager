{"ast":null,"code":"import _toConsumableArray from \"/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { useState } from 'react';\nimport { isFormList, formList } from './form-list/form-list.js';\nimport { validateValues, validateFieldValue } from './validate-values/validate-values.js';\nimport { filterErrors } from './filter-errors/filter-errors.js';\nimport { getInputOnChange } from './get-input-on-change/get-input-on-change.js';\nimport { getErrorPath } from './get-error-path/get-error-path.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return a;\n};\n\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\n\nfunction useForm(_ref) {\n  var initialValues = _ref.initialValues,\n      initialErrors = _ref.initialErrors,\n      rules = _ref.validate,\n      schema = _ref.schema;\n\n  var _useState = useState(filterErrors(initialErrors)),\n      _useState2 = _slicedToArray(_useState, 2),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = useState(initialValues),\n      _useState4 = _slicedToArray(_useState3, 2),\n      values = _useState4[0],\n      setValues = _useState4[1];\n\n  var clearErrors = function clearErrors() {\n    return setErrors({});\n  };\n\n  var setFieldError = function setFieldError(field, error) {\n    return setErrors(function (current) {\n      return __spreadProps(__spreadValues({}, current), _defineProperty({}, field, error));\n    });\n  };\n\n  var clearFieldError = function clearFieldError(field) {\n    return setErrors(function (current) {\n      var clone = __spreadValues({}, current);\n\n      delete clone[field];\n      return clone;\n    });\n  };\n\n  var setFieldValue = function setFieldValue(field, value, errorPath) {\n    setValues(function (currentValues) {\n      return __spreadProps(__spreadValues({}, currentValues), _defineProperty({}, field, value));\n    });\n    clearFieldError(errorPath || field);\n  };\n\n  var setListItem = function setListItem(field, index, value, errorPath) {\n    var list = values[field];\n\n    if (isFormList(list) && list[index] !== void 0) {\n      var cloned = _toConsumableArray(list);\n\n      cloned[index] = value;\n      setFieldValue(field, formList(cloned), errorPath);\n    }\n  };\n\n  var removeListItem = function removeListItem(field, indices) {\n    var list = values[field];\n\n    if (isFormList(list)) {\n      setFieldValue(field, formList(list.filter(function (_, index) {\n        return Array.isArray(indices) ? !indices.includes(index) : indices !== index;\n      })));\n    }\n  };\n\n  var addListItem = function addListItem(field, payload) {\n    var list = values[field];\n\n    if (isFormList(list)) {\n      setFieldValue(field, formList([].concat(_toConsumableArray(list), [payload])));\n    }\n  };\n\n  var reorderListItem = function reorderListItem(field, _ref2) {\n    var from = _ref2.from,\n        to = _ref2.to;\n    var list = values[field];\n\n    if (isFormList(list) && list[from] !== void 0 && list[to] !== void 0) {\n      var cloned = _toConsumableArray(list);\n\n      var item = list[from];\n      cloned.splice(from, 1);\n      cloned.splice(to, 0, item);\n      setFieldValue(field, formList(cloned));\n    }\n  };\n\n  var validate = function validate() {\n    var results = validateValues(schema || rules, values);\n    setErrors(results.errors);\n    return results;\n  };\n\n  var validateField = function validateField(field) {\n    var results = validateFieldValue(field, schema || rules, values);\n    results.hasError ? setFieldError(field, results.error) : clearFieldError(field);\n    return results;\n  };\n\n  var onSubmit = function onSubmit(handleSubmit) {\n    return function (event) {\n      event.preventDefault();\n      var results = validate();\n      !results.hasErrors && handleSubmit(values, event);\n    };\n  };\n\n  var reset = function reset() {\n    setValues(initialValues);\n    clearErrors();\n  };\n\n  var getInputProps = function getInputProps(field) {\n    var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        type = _ref3.type,\n        _ref3$withError = _ref3.withError,\n        withError = _ref3$withError === void 0 ? true : _ref3$withError;\n\n    var value = values[field];\n    var onChange = getInputOnChange(function (val) {\n      return setFieldValue(field, val);\n    });\n    var payload = type === \"checkbox\" ? {\n      checked: value,\n      onChange: onChange\n    } : {\n      value: value,\n      onChange: onChange\n    };\n\n    if (withError && errors[field]) {\n      payload.error = errors[field];\n    }\n\n    return payload;\n  };\n\n  var getListInputProps = function getListInputProps(field, index, listField) {\n    var _ref4 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n        type = _ref4.type,\n        _ref4$withError = _ref4.withError,\n        withError = _ref4$withError === void 0 ? true : _ref4$withError;\n\n    var list = values[field];\n\n    if (isFormList(list) && list[index] && listField in list[index]) {\n      var listValue = list[index];\n      var value = listValue[listField];\n      var listItemErrorPath = getErrorPath([field, index, listField]);\n      var onChange = getInputOnChange(function (val) {\n        return setListItem(field, index, __spreadProps(__spreadValues({}, listValue), _defineProperty({}, listField, val)), listItemErrorPath);\n      });\n      var payload = type === \"checkbox\" ? {\n        checked: value,\n        onChange: onChange\n      } : {\n        value: value,\n        onChange: onChange\n      };\n      var error = errors[getErrorPath([field, index, listField])];\n\n      if (withError && error) {\n        payload.error = error;\n      }\n\n      return payload;\n    }\n\n    return {};\n  };\n\n  return {\n    values: values,\n    setValues: setValues,\n    setFieldValue: setFieldValue,\n    errors: errors,\n    setErrors: setErrors,\n    clearErrors: clearErrors,\n    clearFieldError: clearFieldError,\n    setFieldError: setFieldError,\n    setListItem: setListItem,\n    removeListItem: removeListItem,\n    addListItem: addListItem,\n    reorderListItem: reorderListItem,\n    validate: validate,\n    validateField: validateField,\n    onSubmit: onSubmit,\n    reset: reset,\n    getInputProps: getInputProps,\n    getListInputProps: getListInputProps\n  };\n}\n\nexport { useForm };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","useForm","initialValues","initialErrors","rules","validate","schema","useState","filterErrors","errors","setErrors","values","setValues","clearErrors","setFieldError","field","error","current","clearFieldError","clone","setFieldValue","errorPath","currentValues","setListItem","index","list","isFormList","cloned","formList","removeListItem","indices","filter","_","Array","isArray","includes","addListItem","payload","reorderListItem","from","to","item","splice","results","validateValues","validateField","validateFieldValue","hasError","onSubmit","handleSubmit","event","preventDefault","hasErrors","reset","getInputProps","type","withError","onChange","getInputOnChange","val","checked","getListInputProps","listField","listValue","listItemErrorPath","getErrorPath"],"sources":["/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@mantine/form/src/use-form.ts"],"sourcesContent":["import { useState } from 'react';\nimport { formList, isFormList, FormList } from './form-list/form-list';\nimport { validateValues, validateFieldValue } from './validate-values/validate-values';\nimport { filterErrors } from './filter-errors/filter-errors';\nimport { getInputOnChange } from './get-input-on-change/get-input-on-change';\nimport { getErrorPath } from './get-error-path/get-error-path';\nimport type {\n  FormErrors,\n  FormRules,\n  FormValidationResult,\n  FormFieldValidationResult,\n  GetInputProps,\n  GetInputPropsFieldType,\n} from './types';\n\nexport interface UseFormInput<T> {\n  initialValues: T;\n  initialErrors?: FormErrors;\n  validate?: FormRules<T>;\n  schema?: (values: Record<string, any>) => FormErrors;\n}\n\nexport interface UseFormReturnType<T> {\n  values: T;\n  setValues: React.Dispatch<React.SetStateAction<T>>;\n  setFieldValue: <K extends keyof T, V extends T[K]>(field: K, value: V) => void;\n  errors: FormErrors;\n  setErrors: React.Dispatch<React.SetStateAction<FormErrors>>;\n  setFieldError: <K extends keyof T>(field: K, error: React.ReactNode) => void;\n  clearFieldError: <K extends keyof T>(field: K) => void;\n  clearErrors(): void;\n  setListItem: <K extends keyof T, V extends T[K]>(\n    field: K,\n    index: number,\n    value: V extends FormList<infer U> ? U : never\n  ) => void;\n  addListItem: <K extends keyof T, V extends T[K]>(\n    field: K,\n    payload: V extends FormList<infer U> ? U : never\n  ) => void;\n  removeListItem: <K extends keyof T>(field: K, indices: number[] | number) => void;\n  reorderListItem: <K extends keyof T>(field: K, payload: { from: number; to: number }) => void;\n  validate(): FormValidationResult;\n  validateField: (field: string) => FormFieldValidationResult;\n  onSubmit(\n    handleSubmit: (values: T, event: React.FormEvent) => void\n  ): (event?: React.FormEvent) => void;\n  reset(): void;\n  getInputProps: <K extends keyof T, L extends GetInputPropsFieldType = 'input'>(\n    field: K,\n    options?: { type?: L; withError?: boolean }\n  ) => GetInputProps<L>;\n\n  getListInputProps: <\n    K extends keyof T,\n    U extends T[K],\n    L extends GetInputPropsFieldType = 'input'\n  >(\n    field: K,\n    index: number,\n    listField: U extends FormList<infer V> ? keyof V : never,\n    options?: { type?: L; withError?: boolean }\n  ) => GetInputProps<L>;\n}\n\nexport function useForm<T extends { [key: string]: any }>({\n  initialValues,\n  initialErrors,\n  validate: rules,\n  schema,\n}: UseFormInput<T>): UseFormReturnType<T> {\n  const [errors, setErrors] = useState(filterErrors(initialErrors));\n  const [values, setValues] = useState(initialValues);\n\n  const clearErrors = () => setErrors({});\n  const setFieldError = (field: keyof T, error: React.ReactNode) =>\n    setErrors((current) => ({ ...current, [field]: error }));\n\n  const clearFieldError = (field: keyof T) =>\n    setErrors((current) => {\n      const clone: any = { ...current };\n      delete clone[field];\n      return clone;\n    });\n\n  const setFieldValue = <K extends keyof T, V extends T[K]>(\n    field: K,\n    value: V,\n    errorPath?: string\n  ) => {\n    setValues((currentValues) => ({ ...currentValues, [field]: value }));\n    clearFieldError(errorPath || field);\n  };\n\n  const setListItem = <K extends keyof T, V extends T[K]>(\n    field: K,\n    index: number,\n    value: V[K][number],\n    errorPath?: string\n  ) => {\n    const list = values[field];\n    if (isFormList(list) && list[index] !== undefined) {\n      const cloned = [...list];\n      cloned[index] = value;\n      setFieldValue(field, formList(cloned) as any, errorPath);\n    }\n  };\n\n  const removeListItem = <K extends keyof T>(field: K, indices: number[] | number) => {\n    const list = values[field];\n\n    if (isFormList(list)) {\n      setFieldValue(\n        field,\n        formList(\n          list.filter((_: any, index: number) =>\n            Array.isArray(indices) ? !indices.includes(index) : indices !== index\n          )\n        ) as any\n      );\n    }\n  };\n\n  const addListItem = <K extends keyof T, V extends T[K]>(field: K, payload: V[number]) => {\n    const list = values[field];\n\n    if (isFormList(list)) {\n      setFieldValue(field, formList([...list, payload]) as any);\n    }\n  };\n\n  const reorderListItem = <K extends keyof T>(\n    field: K,\n    { from, to }: { from: number; to: number }\n  ) => {\n    const list = values[field];\n\n    if (isFormList(list) && list[from] !== undefined && list[to] !== undefined) {\n      const cloned = [...list];\n      const item = list[from];\n\n      cloned.splice(from, 1);\n      cloned.splice(to, 0, item);\n      setFieldValue(field, formList(cloned) as any);\n    }\n  };\n\n  const validate = () => {\n    const results = validateValues(schema || rules, values);\n    setErrors(results.errors);\n    return results;\n  };\n\n  const validateField = (field: string) => {\n    const results = validateFieldValue(field, schema || rules, values);\n    results.hasError ? setFieldError(field, results.error) : clearFieldError(field);\n    return results;\n  };\n\n  const onSubmit =\n    (handleSubmit: (values: T, event: React.FormEvent) => void) => (event: React.FormEvent) => {\n      event.preventDefault();\n      const results = validate();\n      !results.hasErrors && handleSubmit(values, event);\n    };\n\n  const reset = () => {\n    setValues(initialValues);\n    clearErrors();\n  };\n\n  const getInputProps = <\n    K extends keyof T,\n    U extends T[K],\n    L extends GetInputPropsFieldType = 'input'\n  >(\n    field: K,\n    { type, withError = true }: { type?: L; withError?: boolean } = {}\n  ): GetInputProps<L> => {\n    const value = values[field];\n    const onChange = getInputOnChange<U>((val: U) => setFieldValue(field, val)) as any;\n\n    const payload: any = type === 'checkbox' ? { checked: value, onChange } : { value, onChange };\n\n    if (withError && errors[field as any]) {\n      payload.error = errors[field as any];\n    }\n\n    return payload as any;\n  };\n\n  const getListInputProps = <\n    K extends keyof T,\n    U extends T[K][number],\n    LK extends keyof U,\n    L extends GetInputPropsFieldType = 'input'\n  >(\n    field: K,\n    index: number,\n    listField: LK,\n    { type, withError = true }: { type?: L; withError?: boolean } = {}\n  ): GetInputProps<L> => {\n    const list = values[field];\n\n    if (isFormList(list) && list[index] && listField in list[index]) {\n      const listValue = list[index];\n      const value = listValue[listField];\n      const listItemErrorPath = getErrorPath([field, index, listField]);\n      const onChange = getInputOnChange<U[LK]>((val: U[LK]) =>\n        setListItem(field, index, { ...listValue, [listField]: val }, listItemErrorPath)\n      ) as any;\n      const payload: any = type === 'checkbox' ? { checked: value, onChange } : { value, onChange };\n      const error = errors[getErrorPath([field, index, listField])];\n\n      if (withError && error) {\n        payload.error = error;\n      }\n\n      return payload;\n    }\n\n    return {} as any;\n  };\n\n  return {\n    values,\n    setValues,\n    setFieldValue,\n    errors,\n    setErrors,\n    clearErrors,\n    clearFieldError,\n    setFieldError,\n    setListItem,\n    removeListItem,\n    addListItem,\n    reorderListItem,\n    validate,\n    validateField,\n    onSubmit,\n    reset,\n    getInputProps,\n    getListInputProps,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}