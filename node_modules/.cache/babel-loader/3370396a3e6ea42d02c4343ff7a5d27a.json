{"ast":null,"code":"import { fromEntries } from './utils/from-entries/from-entries.js';\nimport { useCss } from './use-css.js';\nimport { useMantineTheme, useMantineThemeStyles } from '../theme/MantineProvider.js';\nimport { mergeClassNames } from './utils/merge-class-names/merge-class-names.js';\n\nfunction createStyles(getCssObjectOrCssObject) {\n  var getCssObject = typeof getCssObjectOrCssObject === \"function\" ? getCssObjectOrCssObject : function () {\n    return getCssObjectOrCssObject;\n  };\n\n  function useStyles(params, options) {\n    var theme = useMantineTheme();\n\n    var _useMantineThemeStyle = useMantineThemeStyles(options == null ? void 0 : options.name),\n        themeStyles = _useMantineThemeStyle.styles,\n        themeClassNames = _useMantineThemeStyle.classNames;\n\n    var _useCss = useCss(),\n        css = _useCss.css,\n        cx = _useCss.cx;\n\n    function createRef(refName) {\n      return \"__mantine-ref-\".concat(refName || \"\");\n    }\n\n    var cssObject = getCssObject(theme, params, createRef);\n\n    var _styles = typeof (options == null ? void 0 : options.styles) === \"function\" ? options == null ? void 0 : options.styles(theme) : (options == null ? void 0 : options.styles) || {};\n\n    var _themeStyles = typeof themeStyles === \"function\" ? themeStyles(theme, params || {}) : themeStyles || {};\n\n    var classes = fromEntries(Object.keys(cssObject).map(function (key) {\n      var mergedStyles = cx(css(cssObject[key]), css(_themeStyles[key]), css(_styles[key]));\n      return [key, mergedStyles];\n    }));\n    return {\n      classes: mergeClassNames(cx, classes, themeClassNames, options == null ? void 0 : options.classNames, options == null ? void 0 : options.name),\n      cx: cx,\n      theme: theme\n    };\n  }\n\n  return useStyles;\n}\n\nexport { createStyles };","map":{"version":3,"mappings":";;;;;AAIO,SAASA,YAAT,CAAsBC,uBAAtB,EAA+C;EACpD,IAAMC,YAAY,GAAG,OAAOD,uBAAP,KAAmC,UAAnC,GAAgDA,uBAAhD,GAA0E;IAAA,OAAMA,uBAAN;EAAA,CAA/F;;EACA,SAASE,SAAT,CAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;IAClC,IAAMC,KAAK,GAAGC,eAAe,EAA7B;;IACA,4BAA6DC,qBAAqB,CAACH,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACI,IAApC,CAAlF;IAAA,IAAgBC,WAAhB,yBAAQC,MAAR;IAAA,IAAyCC,eAAzC,yBAA6BC,UAA7B;;IACA,cAAoBC,MAAM,EAA1B;IAAA,IAAQC,GAAR,WAAQA,GAAR;IAAA,IAAaC,EAAb,WAAaA,EAAb;;IACA,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;MAC1B,+BAAwBA,OAAO,IAAI,EAAnC;IACD;;IACD,IAAMC,SAAS,GAAGjB,YAAY,CAACI,KAAD,EAAQF,MAAR,EAAgBa,SAAhB,CAA9B;;IACA,IAAMG,OAAO,GAAG,QAAQf,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACM,MAA3C,MAAuD,UAAvD,GAAoEN,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACM,MAAR,CAAeL,KAAf,CAA/F,GAAuH,CAACD,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACM,MAApC,KAA+C,EAAtL;;IACA,IAAMU,YAAY,GAAG,OAAOX,WAAP,KAAuB,UAAvB,GAAoCA,WAAW,CAACJ,KAAD,EAAQF,MAAM,IAAI,EAAlB,CAA/C,GAAuEM,WAAW,IAAI,EAA3G;;IACA,IAAMY,OAAO,GAAGC,WAAW,CAACC,MAAM,CAACC,IAAP,CAAYN,SAAZ,EAAuBO,GAAvB,CAA2B,UAACC,GAAD,EAAS;MAC9D,IAAMC,YAAY,GAAGZ,EAAE,CAACD,GAAG,CAACI,SAAS,CAACQ,GAAD,CAAV,CAAJ,EAAsBZ,GAAG,CAACM,YAAY,CAACM,GAAD,CAAb,CAAzB,EAA8CZ,GAAG,CAACK,OAAO,CAACO,GAAD,CAAR,CAAjD,CAAvB;MACA,OAAO,CAACA,GAAD,EAAMC,YAAN,CAAP;IACD,CAH2B,CAAD,CAA3B;IAIA,OAAO;MACLN,OAAO,EAAEO,eAAe,CAACb,EAAD,EAAKM,OAAL,EAAcV,eAAd,EAA+BP,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACQ,UAAlE,EAA8ER,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACI,IAAjH,CADnB;MAELO,EAAE,EAAFA,EAFK;MAGLV,KAAK,EAALA;IAHK,CAAP;EAKD;;EACD,OAAOH,SAAP;AACF","names":["createStyles","getCssObjectOrCssObject","getCssObject","useStyles","params","options","theme","useMantineTheme","useMantineThemeStyles","name","themeStyles","styles","themeClassNames","classNames","useCss","css","cx","createRef","refName","cssObject","_styles","_themeStyles","classes","fromEntries","Object","keys","map","key","mergedStyles","mergeClassNames"],"sources":["/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@mantine/styles/src/tss/create-styles.ts"],"sourcesContent":["import type { MantineTheme } from '../theme';\nimport type { CSSObject } from './types';\nimport { fromEntries } from './utils/from-entries/from-entries';\nimport { useCss } from './use-css';\nimport { useMantineTheme, useMantineThemeStyles } from '../theme/MantineProvider';\nimport { mergeClassNames } from './utils/merge-class-names/merge-class-names';\n\nexport interface UseStylesOptions<Key extends string> {\n  classNames?: Partial<Record<Key, string>>;\n  styles?:\n    | Partial<Record<Key, CSSObject>>\n    | ((theme: MantineTheme) => Partial<Record<Key, CSSObject>>);\n  name: string;\n}\n\nexport function createStyles<Key extends string = string, Params = void>(\n  getCssObjectOrCssObject:\n    | ((\n        theme: MantineTheme,\n        params: Params,\n        createRef: (refName: string) => string\n      ) => Record<Key, CSSObject>)\n    | Record<Key, CSSObject>\n) {\n  const getCssObject =\n    typeof getCssObjectOrCssObject === 'function'\n      ? getCssObjectOrCssObject\n      : () => getCssObjectOrCssObject;\n\n  function useStyles(params: Params, options?: UseStylesOptions<Key>) {\n    const theme = useMantineTheme();\n    const { styles: themeStyles, classNames: themeClassNames } = useMantineThemeStyles(\n      options?.name\n    );\n\n    const { css, cx } = useCss();\n\n    function createRef(refName: string) {\n      return `__mantine-ref-${refName || ''}`;\n    }\n\n    const cssObject = getCssObject(theme, params, createRef);\n\n    const _styles =\n      typeof options?.styles === 'function' ? options?.styles(theme) : options?.styles || {};\n    const _themeStyles =\n      typeof themeStyles === 'function' ? themeStyles(theme, params || {}) : themeStyles || {};\n\n    const classes = fromEntries(\n      Object.keys(cssObject).map((key) => {\n        const mergedStyles = cx(css(cssObject[key]), css(_themeStyles[key]), css(_styles[key]));\n        return [key, mergedStyles];\n      })\n    ) as Record<Key, string>;\n\n    return {\n      classes: mergeClassNames(cx, classes, themeClassNames, options?.classNames, options?.name),\n      cx,\n      theme,\n    };\n  }\n\n  return useStyles;\n}\n"]},"metadata":{},"sourceType":"module"}