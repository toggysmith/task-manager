{"ast":null,"code":"function yupResolver(schema) {\n  const _schema = schema;\n  return values => {\n    try {\n      _schema.validateSync(values, {\n        abortEarly: false\n      });\n\n      return {};\n    } catch (_yupError) {\n      const yupError = _yupError;\n      const results = {};\n      yupError.inner.forEach(error => {\n        results[error.path.replace(\"[\", \".\").replace(\"]\", \"\")] = error.message;\n      });\n      return results;\n    }\n  };\n}\n\nexport { yupResolver };","map":{"version":3,"mappings":"AAAO,SAASA,WAAT,CAAqBC,MAArB,EAA6B;EAClC,MAAMC,OAAO,GAAGD,MAAhB;EACA,OAAQE,MAAD,IAAY;IACjB,IAAI;MACFD,OAAO,CAACE,YAAR,CAAqBD,MAArB,EAA6B;QAAEE,UAAU,EAAE;MAAd,CAA7B;;MACA,OAAO,EAAP;IACD,CAHD,CAGE,OAAOC,SAAP,EAAkB;MAClB,MAAMC,QAAQ,GAAGD,SAAjB;MACA,MAAME,OAAO,GAAG,EAAhB;MACAD,QAAQ,CAACE,KAAT,CAAeC,OAAf,CAAwBC,KAAD,IAAW;QAChCH,OAAO,CAACG,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmB,GAAnB,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,GAArC,EAA0C,EAA1C,CAAD,CAAP,GAAyDF,KAAK,CAACG,OAA/D;MACD,CAFD;MAGA,OAAON,OAAP;IACD;EACF,CAZD;AAaF","names":["yupResolver","schema","_schema","values","validateSync","abortEarly","_yupError","yupError","results","inner","forEach","error","path","replace","message"],"sources":["/Users/toggles/Documents/GitHub/task-manager/node_modules/@mantine/form/src/resolvers/yup-resolver/yup-resolver.ts"],"sourcesContent":["import type { FormErrors } from '../../types';\n\ninterface YupError {\n  path: string;\n  message: string;\n}\n\ninterface YupValidationResult {\n  inner: YupError[];\n}\n\ninterface YupSchema {\n  validateSync(values: Record<string, any>, options: { abortEarly: boolean }): void;\n}\n\nexport function yupResolver(schema: any) {\n  const _schema: YupSchema = schema;\n\n  return (values: Record<string, any>): FormErrors => {\n    try {\n      _schema.validateSync(values, { abortEarly: false });\n      return {};\n    } catch (_yupError) {\n      const yupError: YupValidationResult = _yupError;\n      const results = {};\n\n      yupError.inner.forEach((error) => {\n        results[error.path.replace('[', '.').replace(']', '')] = error.message;\n      });\n\n      return results;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}