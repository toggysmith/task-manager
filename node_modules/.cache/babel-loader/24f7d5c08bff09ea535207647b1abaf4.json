{"ast":null,"code":"import _slicedToArray from \"/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { createContext, useContext } from 'react';\n\nfunction createUseContext(defaultValue) {\n  var Context = createContext(defaultValue);\n\n  function useContextConsumer(component) {\n    var ctx = useContext(Context);\n\n    var _component$split = component.split(\".\"),\n        _component$split2 = _slicedToArray(_component$split, 1),\n        parentName = _component$split2[0];\n\n    if (!ctx) {\n      throw new Error(\"\".concat(component, \" component was rendered outside of \").concat(parentName, \" component context\"));\n    }\n\n    return ctx;\n  }\n\n  return [Context.Provider, useContextConsumer];\n}\n\nexport { createUseContext };","map":{"version":3,"mappings":";;;AACO,SAASA,gBAAT,CAA0BC,YAA1B,EAAwC;EAC7C,IAAMC,OAAO,GAAGC,aAAa,CAACF,YAAD,CAA7B;;EACA,SAASG,kBAAT,CAA4BC,SAA5B,EAAuC;IACrC,IAAMC,GAAG,GAAGC,UAAU,CAACL,OAAD,CAAtB;;IACA,uBAAqBG,SAAS,CAACG,KAAV,CAAgB,GAAhB,CAArB;IAAA;IAAA,IAAOC,UAAP;;IACA,IAAI,CAACH,GAAL,EAAU;MACR,MAAM,IAAII,KAAJ,WAAaL,SAAb,gDAA4DI,UAA5D,wBAAN;IACD;;IACD,OAAOH,GAAP;EACD;;EACD,OAAO,CAACJ,OAAO,CAACS,QAAT,EAAmBP,kBAAnB,CAAP;AACF","names":["createUseContext","defaultValue","Context","createContext","useContextConsumer","component","ctx","useContext","split","parentName","Error","Provider"],"sources":["/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@mantine/core/src/utils/create-use-context/create-use-context.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport function createUseContext<T>(defaultValue: T) {\n  const Context = createContext<T>(defaultValue);\n\n  function useContextConsumer(component: `${string}.${string}`) {\n    const ctx = useContext(Context);\n    const [parentName] = component.split('.');\n\n    if (!ctx) {\n      throw new Error(\n        `${component} component was rendered outside of ${parentName} component context`\n      );\n    }\n\n    return ctx;\n  }\n\n  return [Context.Provider, useContextConsumer] as const;\n}\n"]},"metadata":{},"sourceType":"module"}