{"ast":null,"code":"function validateListValues(values, key, rules) {\n  const list = values[key];\n  const results = {};\n  list.forEach((item, itemIndex) => {\n    if (typeof item === \"object\" && item !== null) {\n      Object.keys(item).forEach(listItemKey => {\n        if (typeof rules[key][listItemKey] === \"function\") {\n          const error = rules[key][listItemKey](item[listItemKey], values);\n\n          if (error) {\n            results[`${key}.${itemIndex}.${listItemKey}`] = error;\n          }\n        }\n      });\n    }\n  });\n  return results;\n}\n\nexport { validateListValues };","map":{"version":3,"mappings":"AAAO,SAASA,kBAAT,CAA4BC,MAA5B,EAAoCC,GAApC,EAAyCC,KAAzC,EAAgD;EACrD,MAAMC,IAAI,GAAGH,MAAM,CAACC,GAAD,CAAnB;EACA,MAAMG,OAAO,GAAG,EAAhB;EACAD,IAAI,CAACE,OAAL,CAAa,CAACC,IAAD,EAAOC,SAAP,KAAqB;IAChC,IAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;MAC7CE,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBD,OAAlB,CAA2BK,WAAD,IAAiB;QACzC,IAAI,OAAOR,KAAK,CAACD,GAAD,CAAL,CAAWS,WAAX,CAAP,KAAmC,UAAvC,EAAmD;UACjD,MAAMC,KAAK,GAAGT,KAAK,CAACD,GAAD,CAAL,CAAWS,WAAX,EAAwBJ,IAAI,CAACI,WAAD,CAA5B,EAA2CV,MAA3C,CAAd;;UACA,IAAIW,KAAJ,EAAW;YACTP,OAAO,CAAE,GAAEH,GAAI,IAAGM,SAAU,IAAGG,WAAY,EAApC,CAAP,GAAgDC,KAAhD;UACD;QACF;MACF,CAPD;IAQD;EACF,CAXD;EAYA,OAAOP,OAAP;AACF","names":["validateListValues","values","key","rules","list","results","forEach","item","itemIndex","Object","keys","listItemKey","error"],"sources":["/Users/toggles/Documents/GitHub/task-manager/node_modules/@mantine/form/src/validate-values/validate-list-values.ts"],"sourcesContent":["import type { FormList } from '../form-list/form-list';\nimport type { FormRulesRecord, FormErrors } from '../types';\n\nexport function validateListValues<T>(values: T, key: string, rules: FormRulesRecord<T>) {\n  const list: FormList<any> = values[key] as any;\n  const results: FormErrors = {};\n\n  list.forEach((item, itemIndex) => {\n    if (typeof item === 'object' && item !== null) {\n      Object.keys(item).forEach((listItemKey) => {\n        if (typeof rules[key][listItemKey] === 'function') {\n          const error = rules[key][listItemKey](item[listItemKey], values);\n          if (error) {\n            results[`${key}.${itemIndex}.${listItemKey}`] = error;\n          }\n        }\n      });\n    }\n  });\n\n  return results;\n}\n"]},"metadata":{},"sourceType":"module"}