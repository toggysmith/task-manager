{"ast":null,"code":"import { isFormList } from '../form-list/form-list.js';\nimport { filterErrors } from '../filter-errors/filter-errors.js';\nimport { validateListValues } from './validate-list-values.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nfunction validateRecordRules(rules, values) {\n  return Object.keys(rules).reduce((acc, key) => {\n    const rule = rules[key];\n\n    if (isFormList(values[key])) {\n      return __spreadValues(__spreadValues({}, acc), validateListValues(values, key, rules));\n    }\n\n    if (typeof rule === \"function\") {\n      acc[key] = rule(values[key], values);\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction getValidationResults(errors) {\n  const filteredErrors = filterErrors(errors);\n  return {\n    hasErrors: Object.keys(filteredErrors).length > 0,\n    errors: filteredErrors\n  };\n}\n\nfunction validateValues(rules, values) {\n  if (rules === void 0 || rules === null) {\n    return {\n      hasErrors: false,\n      errors: {}\n    };\n  }\n\n  if (typeof rules === \"function\") {\n    return getValidationResults(rules(values));\n  }\n\n  return getValidationResults(validateRecordRules(rules, values));\n}\n\nfunction validateFieldValue(field, rules, values) {\n  const results = validateValues(rules, values);\n  const hasError = (field in results.errors);\n  return {\n    hasError,\n    error: hasError ? results.errors[field] : null\n  };\n}\n\nexport { validateFieldValue, validateValues };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","validateRecordRules","rules","values","keys","reduce","acc","rule","isFormList","validateListValues","getValidationResults","errors","filteredErrors","filterErrors","hasErrors","length","validateValues","validateFieldValue","field","results","hasError","error"],"sources":["/Users/toggles/Documents/GitHub/task-manager/node_modules/@mantine/form/src/validate-values/validate-values.ts"],"sourcesContent":["import type {\n  FormErrors,\n  FormRulesRecord,\n  FormRules,\n  FormValidationResult,\n  FormFieldValidationResult,\n} from '../types';\nimport { isFormList } from '../form-list/form-list';\nimport { filterErrors } from '../filter-errors/filter-errors';\nimport { validateListValues } from './validate-list-values';\n\nfunction validateRecordRules(rules: FormRulesRecord<any>, values: Record<string, any>): FormErrors {\n  return Object.keys(rules).reduce<FormErrors>((acc, key) => {\n    const rule = rules[key];\n\n    if (isFormList(values[key])) {\n      return { ...acc, ...validateListValues(values, key, rules) };\n    }\n\n    if (typeof rule === 'function') {\n      acc[key] = rule(values[key], values);\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction getValidationResults(errors: FormErrors) {\n  const filteredErrors = filterErrors(errors);\n  return { hasErrors: Object.keys(filteredErrors).length > 0, errors: filteredErrors };\n}\n\nexport function validateValues(\n  rules: FormRules<any>,\n  values: Record<string, any>\n): FormValidationResult {\n  if (rules === undefined || rules === null) {\n    return { hasErrors: false, errors: {} };\n  }\n\n  if (typeof rules === 'function') {\n    return getValidationResults(rules(values));\n  }\n\n  return getValidationResults(validateRecordRules(rules, values));\n}\n\nexport function validateFieldValue(\n  field: string,\n  rules: FormRules<any>,\n  values: Record<string, any>\n): FormFieldValidationResult {\n  const results = validateValues(rules, values);\n  const hasError = field in results.errors;\n  return { hasError, error: hasError ? results.errors[field] : null };\n}\n"]},"metadata":{},"sourceType":"module"}