{"ast":null,"code":"import _defineProperty from \"/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { forwardRef, useState } from 'react';\nimport useStyles from './Thumb.styles.js';\nimport { Box } from '../../Box/Box.js';\nimport { Transition } from '../../Transition/Transition.js';\nvar Thumb = forwardRef(function (_ref, ref) {\n  var max = _ref.max,\n      min = _ref.min,\n      value = _ref.value,\n      position = _ref.position,\n      label = _ref.label,\n      dragging = _ref.dragging,\n      onMouseDown = _ref.onMouseDown,\n      color = _ref.color,\n      classNames = _ref.classNames,\n      styles = _ref.styles,\n      size = _ref.size,\n      labelTransition = _ref.labelTransition,\n      labelTransitionDuration = _ref.labelTransitionDuration,\n      labelTransitionTimingFunction = _ref.labelTransitionTimingFunction,\n      labelAlwaysOn = _ref.labelAlwaysOn,\n      thumbLabel = _ref.thumbLabel,\n      _onFocus = _ref.onFocus,\n      _onBlur = _ref.onBlur,\n      showLabelOnHover = _ref.showLabelOnHover,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children,\n      disabled = _ref.disabled;\n\n  var _useStyles = useStyles({\n    color: color,\n    size: size,\n    disabled: disabled\n  }, {\n    classNames: classNames,\n    styles: styles,\n    name: \"Slider\"\n  }),\n      classes = _useStyles.classes,\n      cx = _useStyles.cx,\n      theme = _useStyles.theme;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      focused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var isVisible = labelAlwaysOn || dragging || focused || showLabelOnHover;\n  return /* @__PURE__ */React.createElement(Box, {\n    tabIndex: 0,\n    role: \"slider\",\n    \"aria-label\": thumbLabel,\n    \"aria-valuemax\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuenow\": value,\n    ref: ref,\n    className: cx(classes.thumb, _defineProperty({}, classes.dragging, dragging)),\n    onFocus: function onFocus() {\n      setFocused(true);\n      typeof _onFocus === \"function\" && _onFocus();\n    },\n    onBlur: function onBlur() {\n      setFocused(false);\n      typeof _onBlur === \"function\" && _onBlur();\n    },\n    onTouchStart: onMouseDown,\n    onMouseDown: onMouseDown,\n    onClick: function onClick(event) {\n      return event.stopPropagation();\n    },\n    style: _defineProperty({}, theme.dir === \"rtl\" ? \"right\" : \"left\", \"\".concat(position, \"%\"))\n  }, children, /* @__PURE__ */React.createElement(Transition, {\n    mounted: label != null && isVisible,\n    duration: labelTransitionDuration,\n    transition: labelTransition,\n    timingFunction: labelTransitionTimingFunction || theme.transitionTimingFunction\n  }, function (transitionStyles) {\n    return /* @__PURE__ */React.createElement(\"div\", {\n      style: transitionStyles,\n      className: classes.label\n    }, label);\n  }));\n});\nThumb.displayName = \"@mantine/core/SliderThumb\";\nexport { Thumb };","map":{"version":3,"mappings":"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","names":["Thumb","forwardRef","ref","max","min","value","position","label","dragging","onMouseDown","color","classNames","styles","size","labelTransition","labelTransitionDuration","labelTransitionTimingFunction","labelAlwaysOn","thumbLabel","onFocus","onBlur","showLabelOnHover","children","disabled","useStyles","name","classes","cx","theme","useState","focused","setFocused","isVisible","React","createElement","Box","tabIndex","role","className","thumb","onTouchStart","onClick","event","stopPropagation","style","dir","Transition","mounted","duration","transition","timingFunction","transitionTimingFunction","transitionStyles","displayName"],"sources":["/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@mantine/core/src/components/Slider/Thumb/Thumb.tsx"],"sourcesContent":["import React, { useState, forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, MantineColor, Selectors } from '@mantine/styles';\nimport { Box } from '../../Box';\nimport { Transition, MantineTransition } from '../../Transition';\nimport useStyles from './Thumb.styles';\n\nexport type ThumbStylesNames = Selectors<typeof useStyles>;\n\nexport interface ThumbProps extends DefaultProps<ThumbStylesNames> {\n  max: number;\n  min: number;\n  value: number;\n  position: number;\n  dragging: boolean;\n  color: MantineColor;\n  size: MantineNumberSize;\n  label: React.ReactNode;\n  onMouseDown(event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>): void;\n  labelTransition?: MantineTransition;\n  labelTransitionDuration?: number;\n  labelTransitionTimingFunction?: string;\n  labelAlwaysOn: boolean;\n  thumbLabel: string;\n  onFocus?(): void;\n  onBlur?(): void;\n  showLabelOnHover?: boolean;\n  children?: React.ReactNode;\n  disabled: boolean;\n}\n\nexport const Thumb = forwardRef<HTMLDivElement, ThumbProps>(\n  (\n    {\n      max,\n      min,\n      value,\n      position,\n      label,\n      dragging,\n      onMouseDown,\n      color,\n      classNames,\n      styles,\n      size,\n      labelTransition,\n      labelTransitionDuration,\n      labelTransitionTimingFunction,\n      labelAlwaysOn,\n      thumbLabel,\n      onFocus,\n      onBlur,\n      showLabelOnHover,\n      children = null,\n      disabled,\n    }: ThumbProps,\n    ref\n  ) => {\n    const { classes, cx, theme } = useStyles(\n      { color, size, disabled },\n      { classNames, styles, name: 'Slider' }\n    );\n    const [focused, setFocused] = useState(false);\n    const isVisible = labelAlwaysOn || dragging || focused || showLabelOnHover;\n\n    return (\n      <Box<'div'>\n        tabIndex={0}\n        role=\"slider\"\n        aria-label={thumbLabel}\n        aria-valuemax={max}\n        aria-valuemin={min}\n        aria-valuenow={value}\n        ref={ref}\n        className={cx(classes.thumb, { [classes.dragging]: dragging })}\n        onFocus={() => {\n          setFocused(true);\n          typeof onFocus === 'function' && onFocus();\n        }}\n        onBlur={() => {\n          setFocused(false);\n          typeof onBlur === 'function' && onBlur();\n        }}\n        onTouchStart={onMouseDown}\n        onMouseDown={onMouseDown}\n        onClick={(event) => event.stopPropagation()}\n        style={{ [theme.dir === 'rtl' ? 'right' : 'left']: `${position}%` }}\n      >\n        {children}\n        <Transition\n          mounted={label != null && isVisible}\n          duration={labelTransitionDuration}\n          transition={labelTransition}\n          timingFunction={labelTransitionTimingFunction || theme.transitionTimingFunction}\n        >\n          {(transitionStyles) => (\n            <div style={transitionStyles} className={classes.label}>\n              {label}\n            </div>\n          )}\n        </Transition>\n      </Box>\n    );\n  }\n);\n\nThumb.displayName = '@mantine/core/SliderThumb';\n"]},"metadata":{},"sourceType":"module"}