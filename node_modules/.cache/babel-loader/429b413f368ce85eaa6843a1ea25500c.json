{"ast":null,"code":"import React, { forwardRef, useRef } from 'react';\nimport { getDefaultZIndex } from '@mantine/styles';\nimport { SelectScrollArea } from '../SelectScrollArea/SelectScrollArea.js';\nimport useStyles from './SelectDropdown.styles.js';\nimport { Popper } from '../../Popper/Popper.js';\nimport { Paper } from '../../Paper/Paper.js';\nvar SelectDropdown = forwardRef(function (_ref, ref) {\n  var mounted = _ref.mounted,\n      transition = _ref.transition,\n      transitionDuration = _ref.transitionDuration,\n      transitionTimingFunction = _ref.transitionTimingFunction,\n      uuid = _ref.uuid,\n      shadow = _ref.shadow,\n      maxDropdownHeight = _ref.maxDropdownHeight,\n      _ref$withinPortal = _ref.withinPortal,\n      withinPortal = _ref$withinPortal === void 0 ? true : _ref$withinPortal,\n      children = _ref.children,\n      classNames = _ref.classNames,\n      styles = _ref.styles,\n      dropdownComponent = _ref.dropdownComponent,\n      referenceElement = _ref.referenceElement,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? \"column\" : _ref$direction,\n      onDirectionChange = _ref.onDirectionChange,\n      _ref$switchDirectionO = _ref.switchDirectionOnFlip,\n      switchDirectionOnFlip = _ref$switchDirectionO === void 0 ? false : _ref$switchDirectionO,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? getDefaultZIndex(\"popover\") : _ref$zIndex,\n      _ref$dropdownPosition = _ref.dropdownPosition,\n      dropdownPosition = _ref$dropdownPosition === void 0 ? \"flip\" : _ref$dropdownPosition,\n      __staticSelector = _ref.__staticSelector,\n      _ref$positionDependen = _ref.positionDependencies,\n      positionDependencies = _ref$positionDependen === void 0 ? [] : _ref$positionDependen;\n\n  var _useStyles = useStyles({\n    native: dropdownComponent !== SelectScrollArea\n  }, {\n    classNames: classNames,\n    styles: styles,\n    name: __staticSelector\n  }),\n      classes = _useStyles.classes;\n\n  var previousPlacement = useRef(\"bottom\");\n  return /* @__PURE__ */React.createElement(Popper, {\n    referenceElement: referenceElement,\n    mounted: mounted,\n    transition: transition,\n    transitionDuration: transitionDuration,\n    exitTransitionDuration: 0,\n    transitionTimingFunction: transitionTimingFunction,\n    position: dropdownPosition === \"flip\" ? \"bottom\" : dropdownPosition,\n    withinPortal: withinPortal,\n    forceUpdateDependencies: positionDependencies,\n    zIndex: zIndex,\n    modifiers: [{\n      name: \"preventOverflow\",\n      enabled: false\n    }, {\n      name: \"flip\",\n      enabled: dropdownPosition === \"flip\"\n    }, {\n      name: \"sameWidth\",\n      enabled: true,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn: function fn(_ref2) {\n        var state = _ref2.state;\n        state.styles.popper.width = \"\".concat(state.rects.reference.width, \"px\");\n      },\n      effect: function effect(_ref3) {\n        var state = _ref3.state;\n        state.elements.popper.style.width = \"\".concat(state.elements.reference.offsetWidth, \"px\");\n      }\n    }, {\n      name: \"directionControl\",\n      enabled: true,\n      phase: \"main\",\n      fn: function fn(_ref4) {\n        var state = _ref4.state;\n\n        if (previousPlacement.current !== state.placement) {\n          previousPlacement.current = state.placement;\n          var nextDirection = state.placement === \"top\" ? \"column-reverse\" : \"column\";\n\n          if (direction !== nextDirection && switchDirectionOnFlip) {\n            onDirectionChange && onDirectionChange(nextDirection);\n          }\n        }\n      }\n    }]\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      maxHeight: maxDropdownHeight,\n      display: \"flex\"\n    }\n  }, /* @__PURE__ */React.createElement(Paper, {\n    radius: \"sm\",\n    component: dropdownComponent || \"div\",\n    id: \"\".concat(uuid, \"-items\"),\n    \"aria-labelledby\": \"\".concat(uuid, \"-label\"),\n    role: \"listbox\",\n    className: classes.dropdown,\n    shadow: shadow,\n    ref: ref,\n    onMouseDown: function onMouseDown(event) {\n      return event.preventDefault();\n    }\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: direction,\n      width: \"100%\"\n    }\n  }, children))));\n});\nSelectDropdown.displayName = \"@mantine/core/SelectDropdown\";\nexport { SelectDropdown };","map":{"version":3,"mappings":"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","names":["SelectDropdown","forwardRef","ref","mounted","transition","transitionDuration","transitionTimingFunction","uuid","shadow","maxDropdownHeight","withinPortal","children","classNames","styles","dropdownComponent","referenceElement","direction","onDirectionChange","switchDirectionOnFlip","zIndex","getDefaultZIndex","dropdownPosition","__staticSelector","positionDependencies","useStyles","native","SelectScrollArea","name","classes","previousPlacement","useRef","React","createElement","Popper","exitTransitionDuration","position","forceUpdateDependencies","modifiers","enabled","phase","requires","fn","state","popper","width","rects","reference","effect","elements","style","offsetWidth","current","placement","nextDirection","maxHeight","display","Paper","radius","component","id","role","className","dropdown","onMouseDown","event","preventDefault","flexDirection","displayName"],"sources":["/Users/toggles/Documents/Projects/Todo App 2/todo-app/node_modules/@mantine/core/src/components/Select/SelectDropdown/SelectDropdown.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from 'react';\nimport { DefaultProps, MantineShadow, Selectors, getDefaultZIndex } from '@mantine/styles';\nimport type { Placement } from '@popperjs/core';\nimport { SelectScrollArea } from '../SelectScrollArea/SelectScrollArea';\nimport { MantineTransition } from '../../Transition';\nimport { Paper } from '../../Paper';\nimport useStyles from './SelectDropdown.styles';\nimport { Popper } from '../../Popper';\n\nexport type SelectDropdownStylesNames = Selectors<typeof useStyles>;\n\ninterface SelectDropdownProps extends DefaultProps<SelectDropdownStylesNames> {\n  mounted: boolean;\n  transition: MantineTransition;\n  transitionDuration: number;\n  transitionTimingFunction: string;\n  uuid: string;\n  shadow: MantineShadow;\n  maxDropdownHeight?: number | string;\n  withinPortal?: boolean;\n  children: React.ReactNode;\n  __staticSelector: string;\n  dropdownComponent?: React.FC<any>;\n  referenceElement?: HTMLElement;\n  direction?: React.CSSProperties['flexDirection'];\n  onDirectionChange?: (direction: React.CSSProperties['flexDirection']) => void;\n  switchDirectionOnFlip?: boolean;\n  zIndex?: number;\n  dropdownPosition?: 'bottom' | 'top' | 'flip';\n  positionDependencies?: any[];\n}\n\nexport const SelectDropdown = forwardRef<HTMLDivElement, SelectDropdownProps>(\n  (\n    {\n      mounted,\n      transition,\n      transitionDuration,\n      transitionTimingFunction,\n      uuid,\n      shadow,\n      maxDropdownHeight,\n      withinPortal = true,\n      children,\n      classNames,\n      styles,\n      dropdownComponent,\n      referenceElement,\n      direction = 'column',\n      onDirectionChange,\n      switchDirectionOnFlip = false,\n      zIndex = getDefaultZIndex('popover'),\n      dropdownPosition = 'flip',\n      __staticSelector,\n      positionDependencies = [],\n    }: SelectDropdownProps,\n    ref\n  ) => {\n    const { classes } = useStyles(\n      { native: dropdownComponent !== SelectScrollArea },\n      { classNames, styles, name: __staticSelector }\n    );\n\n    const previousPlacement = useRef<Placement>('bottom');\n\n    return (\n      <Popper\n        referenceElement={referenceElement}\n        mounted={mounted}\n        transition={transition}\n        transitionDuration={transitionDuration}\n        exitTransitionDuration={0}\n        transitionTimingFunction={transitionTimingFunction}\n        position={dropdownPosition === 'flip' ? 'bottom' : dropdownPosition}\n        withinPortal={withinPortal}\n        forceUpdateDependencies={positionDependencies}\n        zIndex={zIndex}\n        modifiers={[\n          {\n            name: 'preventOverflow',\n            enabled: false,\n          },\n          {\n            name: 'flip',\n            enabled: dropdownPosition === 'flip',\n          },\n          {\n            // @ts-ignore\n            name: 'sameWidth',\n            enabled: true,\n            phase: 'beforeWrite',\n            requires: ['computeStyles'],\n            fn: ({ state }) => {\n              // eslint-disable-next-line no-param-reassign\n              state.styles.popper.width = `${state.rects.reference.width}px`;\n            },\n            effect: ({ state }) => {\n              // eslint-disable-next-line no-param-reassign\n              state.elements.popper.style.width = `${state.elements.reference.offsetWidth}px`;\n            },\n          },\n          {\n            // @ts-ignore\n            name: 'directionControl',\n            enabled: true,\n            phase: 'main',\n            fn: ({ state }) => {\n              if (previousPlacement.current !== state.placement) {\n                previousPlacement.current = state.placement;\n\n                const nextDirection = state.placement === 'top' ? 'column-reverse' : 'column';\n\n                if (direction !== nextDirection && switchDirectionOnFlip) {\n                  onDirectionChange && onDirectionChange(nextDirection);\n                }\n              }\n            },\n          },\n        ]}\n      >\n        <div style={{ maxHeight: maxDropdownHeight, display: 'flex' }}>\n          <Paper<'div'>\n            radius=\"sm\"\n            component={(dropdownComponent || 'div') as any}\n            id={`${uuid}-items`}\n            aria-labelledby={`${uuid}-label`}\n            role=\"listbox\"\n            className={classes.dropdown}\n            shadow={shadow}\n            ref={ref}\n            onMouseDown={(event) => event.preventDefault()}\n          >\n            <div style={{ display: 'flex', flexDirection: direction, width: '100%' }}>\n              {children}\n            </div>\n          </Paper>\n        </div>\n      </Popper>\n    );\n  }\n);\n\nSelectDropdown.displayName = '@mantine/core/SelectDropdown';\n"]},"metadata":{},"sourceType":"module"}